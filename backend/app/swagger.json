{
  "openapi": "3.0.0",
  "info": {
    "title": "Content Hub API",
    "version": "0.2.0",
    "description": "Personal feed aggregator with RSS feeds, web scraping, social media, user authentication, bookmarks, and read history."
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "System",
      "description": "System health and information"
    },
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Users",
      "description": "User management and preferences"
    },
    {
      "name": "Feeds",
      "description": "Content feeds from RSS and web scraping"
    },
    {
      "name": "Bookmarks",
      "description": "Save and manage favorite articles"
    },
    {
      "name": "Read History",
      "description": "Track read articles"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Article": {
        "type": "object",
        "properties": {
          "title": {"type": "string"},
          "link": {"type": "string"},
          "summary": {"type": "string"},
          "source": {"type": "string"},
          "published": {"type": "string"},
          "type": {"type": "string", "enum": ["rss", "scrape", "reddit", "youtube"]},
          "categories": {"type": "array", "items": {"type": "string"}}
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {"type": "integer"},
          "per_page": {"type": "integer"},
          "total": {"type": "integer"},
          "pages": {"type": "integer"}
        }
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": ["System"],
        "summary": "API information",
        "responses": {
          "200": {"description": "API info"}
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["System"],
        "summary": "Health check",
        "responses": {
          "200": {"description": "API is healthy"}
        }
      }
    },
    "/api/auth/signup": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Sign up",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "name"],
                "properties": {
                  "email": {"type": "string", "format": "email"},
                  "password": {"type": "string", "minLength": 8},
                  "name": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "User created with tokens"},
          "400": {"description": "Invalid input"}
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {"type": "string"},
                  "password": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Login successful with tokens"}
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refresh_token"],
                "properties": {
                  "refresh_token": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "New access token"}
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Request password reset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Reset email sent"}
        }
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Reset password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["token", "new_password"],
                "properties": {
                  "token": {"type": "string"},
                  "new_password": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Password reset successful"}
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {"description": "Current user info"}
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Google OAuth login",
        "description": "Redirects to Google OAuth consent screen",
        "responses": {
          "302": {"description": "Redirect to Google"}
        }
      }
    },
    "/api/auth/google/callback": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Google OAuth callback",
        "description": "Handles Google OAuth callback and returns tokens",
        "responses": {
          "200": {"description": "Login successful with tokens"}
        }
      }
    },
    "/api/users/preferences": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user preferences",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {"description": "User preferences"}
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update preferences",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "feed_sources": {"type": "array", "items": {"type": "string"}},
                  "feed_types": {"type": "array", "items": {"type": "string"}}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Preferences updated"}
        }
      }
    },
    "/api/users/feeds": {
      "get": {
        "tags": ["Users"],
        "summary": "Get personalized feeds",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}},
          {"name": "per_page", "in": "query", "schema": {"type": "integer", "default": 20, "maximum": 100}},
          {"name": "search", "in": "query", "schema": {"type": "string"}},
          {"name": "category", "in": "query", "schema": {"type": "string"}}
        ],
        "responses": {
          "200": {"description": "Personalized feed"}
        }
      }
    },
    "/api/users/profile": {
      "put": {
        "tags": ["Users"],
        "summary": "Update profile",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Profile updated"}
        }
      }
    },
    "/api/users/account": {
      "delete": {
        "tags": ["Users"],
        "summary": "Delete account",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Account deleted"}
        }
      }
    },
    "/api/feeds": {
      "get": {
        "tags": ["Feeds"],
        "summary": "Get all feeds",
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}},
          {"name": "per_page", "in": "query", "schema": {"type": "integer", "default": 20, "maximum": 100}},
          {"name": "search", "in": "query", "schema": {"type": "string"}},
          {"name": "category", "in": "query", "schema": {"type": "string", "enum": ["AI", "Security", "Cloud", "Mobile", "Web", "Hardware", "Gaming", "Startup", "Programming", "General"]}},
          {"name": "source_name", "in": "query", "schema": {"type": "string"}},
          {"name": "start_date", "in": "query", "schema": {"type": "string", "format": "date"}},
          {"name": "end_date", "in": "query", "schema": {"type": "string", "format": "date"}}
        ],
        "responses": {
          "200": {
            "description": "Unified feeds with categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "articles": {"type": "array", "items": {"$ref": "#/components/schemas/Article"}},
                    "pagination": {"$ref": "#/components/schemas/Pagination"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/rss": {
      "get": {
        "tags": ["Feeds"],
        "summary": "Get RSS feeds",
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer"}},
          {"name": "per_page", "in": "query", "schema": {"type": "integer", "maximum": 100}}
        ],
        "responses": {
          "200": {"description": "RSS articles"}
        }
      }
    },
    "/api/scrape": {
      "get": {
        "tags": ["Feeds"],
        "summary": "Get scraped content",
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer"}},
          {"name": "per_page", "in": "query", "schema": {"type": "integer", "maximum": 100}}
        ],
        "responses": {
          "200": {"description": "Scraped articles"}
        }
      }
    },
    "/api/social": {
      "get": {
        "tags": ["Feeds"],
        "summary": "Get social media content",
        "parameters": [
          {"name": "platform", "in": "query", "schema": {"type": "string", "enum": ["reddit", "youtube"]}},
          {"name": "page", "in": "query", "schema": {"type": "integer"}},
          {"name": "per_page", "in": "query", "schema": {"type": "integer", "maximum": 100}},
          {"name": "search", "in": "query", "schema": {"type": "string"}}
        ],
        "responses": {
          "200": {"description": "Social media posts"}
        }
      }
    },
    "/api/bookmarks": {
      "get": {
        "tags": ["Bookmarks"],
        "summary": "Get bookmarks",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer"}},
          {"name": "per_page", "in": "query", "schema": {"type": "integer", "maximum": 100}}
        ],
        "responses": {
          "200": {"description": "User bookmarks"}
        }
      },
      "post": {
        "tags": ["Bookmarks"],
        "summary": "Create bookmark",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["article_url", "title"],
                "properties": {
                  "article_url": {"type": "string"},
                  "title": {"type": "string"},
                  "source": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Bookmark created"}
        }
      }
    },
    "/api/bookmarks/{bookmark_id}": {
      "delete": {
        "tags": ["Bookmarks"],
        "summary": "Delete bookmark",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {"name": "bookmark_id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {"description": "Bookmark deleted"}
        }
      }
    },
    "/api/recommendations": {
      "get": {
        "tags": ["Feeds"],
        "summary": "Get personalized recommendations",
        "description": "Get article recommendations based on read history and bookmarks",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}},
          {"name": "per_page", "in": "query", "schema": {"type": "integer", "default": 20, "maximum": 100}}
        ],
        "responses": {
          "200": {"description": "Recommended articles"}
        }
      }
    },
    "/api/trending": {
      "get": {
        "tags": ["Feeds"],
        "summary": "Get trending articles",
        "description": "Get most popular articles across all users",
        "parameters": [
          {"name": "days", "in": "query", "schema": {"type": "integer", "default": 7}},
          {"name": "page", "in": "query", "schema": {"type": "integer", "default": 1}},
          {"name": "per_page", "in": "query", "schema": {"type": "integer", "default": 20, "maximum": 100}}
        ],
        "responses": {
          "200": {"description": "Trending articles"}
        }
      }
    },
    "/api/stats": {
      "get": {
        "tags": ["Users"],
        "summary": "Get reading statistics",
        "description": "Get user reading stats including articles read, favorite categories, sources, and reading streak",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Reading statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reads": {
                      "type": "object",
                      "properties": {
                        "today": {"type": "integer"},
                        "week": {"type": "integer"},
                        "month": {"type": "integer"},
                        "total": {"type": "integer"}
                      }
                    },
                    "bookmarks": {
                      "type": "object",
                      "properties": {
                        "total": {"type": "integer"}
                      }
                    },
                    "favorite_categories": {"type": "object"},
                    "favorite_sources": {"type": "object"},
                    "reading_streak": {"type": "integer"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/read-history": {
      "get": {
        "tags": ["Read History"],
        "summary": "Get read history",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer"}},
          {"name": "per_page", "in": "query", "schema": {"type": "integer", "maximum": 100}}
        ],
        "responses": {
          "200": {"description": "Read history"}
        }
      },
      "post": {
        "tags": ["Read History"],
        "summary": "Mark article as read",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["article_url"],
                "properties": {
                  "article_url": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Marked as read"}
        }
      }
    }
  }
}
